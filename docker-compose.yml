version: '3.8'

services:
  # MySQL Database
  database:
    image: mysql:8.0
    container_name: gaming_zone_db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_DATABASE: gaming_zone
      MYSQL_USER: gaming_user
      MYSQL_PASSWORD: gaming_password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database/new_db_schema.sql:/docker-entrypoint-initdb.d/schema.sql
    networks:
      - gaming_network

  # Backend PHP Service
  backend:
    build:
      context: .
      dockerfile: docker/backend/Dockerfile
    container_name: gaming_zone_backend
    restart: unless-stopped
    ports:
      - "8080:80"
    volumes:
      - .:/var/www/html
      - ./docker/backend/php.ini:/usr/local/etc/php/php.ini
    environment:
      - DB_HOST=database
      - DB_USERNAME=gaming_user
      - DB_PASSWORD=gaming_password
      - DB_NAME=gaming_zone
    depends_on:
      - database
    networks:
      - gaming_network

  # Frontend Service (Nginx)
  frontend:
    build:
      context: .
      dockerfile: docker/frontend/Dockerfile
    container_name: gaming_zone_frontend
    restart: unless-stopped
    ports:
      - "3000:80"
    volumes:
      - ./pages:/usr/share/nginx/html/pages
      - ./assets:/usr/share/nginx/html/assets
      - ./docker/frontend/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - backend
    networks:
      - gaming_network

  # PHPMyAdmin for database management
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: gaming_zone_phpmyadmin
    restart: unless-stopped
    environment:
      PMA_HOST: database
      PMA_USER: gaming_user
      PMA_PASSWORD: gaming_password
    ports:
      - "8081:80"
    depends_on:
      - database
    networks:
      - gaming_network

volumes:
  mysql_data:

networks:
  gaming_network:
    driver: bridge
